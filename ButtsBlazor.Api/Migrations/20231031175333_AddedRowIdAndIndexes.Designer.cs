// <auto-generated />
using System;
using ButtsBlazor.Api.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ButtsBlazor.Api.Migrations
{
    [DbContext(typeof(ButtsDbContext))]
    [Migration("20231031175333_AddedRowIdAndIndexes")]
    partial class AddedRowIdAndIndexes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0-rc.2.23480.1");

            modelBuilder.Entity("ButtsBlazor.Api.Model.ImageEntity", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Base64Hash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("RowId");

                    b.HasIndex("Path")
                        .IsUnique();

                    b.HasIndex("Type");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("ButtsBlazor.Api.Model.PromptEntity", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CannyImageId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ControlImageId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Enqueued")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OutputImageId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ProcessingCompleted")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ProcessingStart")
                        .HasColumnType("TEXT");

                    b.HasKey("RowId");

                    b.ToTable("Prompts");
                });

            modelBuilder.Entity("ButtsBlazor.Services.PromptArgs", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CannyHigh")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CannyLow")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ControlFile")
                        .HasColumnType("TEXT");

                    b.Property<string>("ControlFilePath")
                        .HasColumnType("TEXT");

                    b.Property<double?>("ControlScale")
                        .HasColumnType("REAL");

                    b.Property<int?>("ControlSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Negative")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NumSteps")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prompt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RowId");

                    b.ToTable("PromptArgs");
                });

            modelBuilder.Entity("Configuration.EFCore.SettingEntity", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("Environment")
                        .HasColumnType("TEXT");

                    b.Property<string>("Application")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Key", "Environment", "Application");

                    b.ToTable("Settings", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
